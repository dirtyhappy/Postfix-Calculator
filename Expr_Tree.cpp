//C++
//Expr_Tree.cpp
//Author : Vivek Bigelow
//
///////////////////////////////////////////////////////////////////////////////
//
// Honor Pledge :
// I pledge that I neither gave nor receieved help on this assignment.
//
//////////////////////////////////////////////////////////////////////////////

#include "Expr_Tree.h"

///////////////////////////////////////////////////////////////////////////////
//
// constructor
//
Expr_Tree::Expr_Tree (void) 
	:	tree_(nullptr),
		eval_(new Eval_Expr_Tree())
{ }

///////////////////////////////////////////////////////////////////////////////
//
// destructor
//
Expr_Tree::~Expr_Tree (void)
{
	if (nullptr != this->eval_){
		delete this->eval_;
	}

	if (nullptr != this->tree_){
		delete this->tree_;
	}
}

///////////////////////////////////////////////////////////////////////////////
//
// evaluate expression
//
int Expr_Tree::evaluate_expr (void) {
	this->tree_->accept(*this->eval_);
	int result = this->eval_->get_result();
	return result;
}

///////////////////////////////////////////////////////////////////////////////
//
// update node
//
void Expr_Tree::update_node (Expr_Node * node) {
	delete this->tree_;
	this->tree_ = node;	
}

///////////////////////////////////////////////////////////////////////////////
//
// get node
//
Expr_Node * Expr_Tree::get_node (void) {
	return this->tree_;
}

///////////////////////////////////////////////////////////////////////////////
